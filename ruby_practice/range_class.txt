3.0.1 :001 > (-1..-5).to_a
 => [] 
3.0.1 :002 > (-5..-1).to_a
 => [-5, -4, -3, -2, -1] 
3.0.1 :003 > ('a'..'e').to_a
 => ["a", "b", "c", "d", "e"] 
3.0.1 :004 > ('a'...'e').to_a
 => ["a", "b", "c", "d"] 
3.0.1 :005 > 
3.0.1 :006 > Range.new(1,nil)
 => 1.. 
3.0.1 :007 > arr=[1,2,3,4,5,6]
 => [1, 2, 3, 4, 5, 6] 
3.0.1 :008 > arr[...2]
 => [1, 2] 
3.0.1 :009 > arr[..2]
 => [1, 2, 3] 
3.0.1 :010 > arr[2...]
 => [3, 4, 5, 6] 
3.0.1 :011 > arr[2..]
 => [3, 4, 5, 6] 

3.0.1 :014 > (0..2)==(0..2)
 => true 
3.0.1 :015 > (0..2)==(0...2)
 => false 
3.0.1 :016 > (0..2)==Range.new(0,2)
 => true 
3.0.1 :017 > case 78
3.0.1 :018 > when 1..50 then puts 'low'
3.0.1 :019 > when 51..75 then puts 'medium'
3.0.1 :020 > when 76..100 then puts 'high'
3.0.1 :021 > end
high
 => nil 
3.0.1 :022 > 
3.0.1 :022 > (1..10).begin
 => 1 
3.0.1 :023 > (1..10).end
 => 10 
3.0.1 :024 > arr
 => [1, 2, 3, 4, 5, 6] 
3.0.1 :025 > (0..arr.length).bsearch{|i| arr[i]>=4}
 => 3 
3.0.1 :027 > (0..arr.length).bsearch{|i| arr[i]>4}
 => 4 
3.0.1 :028 > ary = [0, 100, 100, 100, 200]
 => [0, 100, 100, 100, 200] 
3.0.1 :029 > (0..4).bsearch {|i| 100 - ary[i] }
 => 2 
3.0.1 :030 > (0..4).bsearch {|i| 300 - ary[i] }
 => nil 
3.0.1 :031 > (0..4).bsearch {|i|  50 - ary[i] }
 => nil 
3.0.1 :032 > 
3.0.1 :032 > ("a".."z").cover?("c")
 => true 
3.0.1 :033 > ("a".."z").cover?("5")
 => false 
3.0.1 :034 > ("a".."z").cover?("cc")
 => true 
3.0.1 :035 > ("a".."z").cover?(1) 
 => false 
3.0.1 :036 > (1..5).cover?(2..3)  
 => true 
3.0.1 :037 > (1..5).cover?(0..6) 
 => false 
3.0.1 :038 > (1..5).cover?(1...6)
 => true 
3.0.1 :039 > 
3.0.1 :042 > (1...5).exclude_end?    #=> true
 => true 
3.0.1 :043 > (1..5).exclude_end?
 => false 
3.0.1 :044 > 
3.0.1 :044 > (10..20).first
 => 10 
3.0.1 :045 > (10..20).first(3)
 => [10, 11, 12] 
3.0.1 :046 > 
3.0.1 :046 > ("a".."z").include?("g")
 => true 
3.0.1 :047 > ("a".."z").include?("A")
 => false 
3.0.1 :048 > ("a".."z").include?("cc")
 => false 
3.0.1 :049 > ("a".."z").cover?("cc")
 => true 
3.0.1 :050 > (1..3).include?(1.5)
 => true 
3.0.1 :051 > (10..20).last
 => 20 
3.0.1 :052 > (10..20).last(3)
 => [18, 19, 20] 
3.0.1 :053 > (10...20).last(3)
 => [17, 18, 19] 
3.0.1 :054 > 
3.0.1 :054 > (10..20).max  
 => 20 
3.0.1 :055 > (10..20).max(2)
 => [20, 19] 
3.0.1 :056 > (10...20).max
 => 19 
3.0.1 :057 > (10...20).max(2)   
 => [19, 18] 
3.0.1 :058 > (10...20).max{|x, y| -x <=> -y } 
 => 10 
3.0.1 :059 > (10...20).max(2){|x, y| -x <=> -y }
 => [10, 11] 
3.0.1 :060 > (10..20).size 
 => 11 
3.0.1 :061 > ('a'..'z').size 
 => nil 
3.0.1 :062 > (-Float::INFINITY..Float::INFINITY).size
 => Infinity 
3.0.1 :063 > 

